//
// Quantum Script
//
// Copyright (c) 2020-2022 Grigore Stefan <g_stefan@yahoo.com>
// Created by Grigore Stefan <g_stefan@yahoo.com>
//
// MIT License (MIT) <http://opensource.org/licenses/MIT>
//

#include "quantum-script-copyright.cpp"
#include "quantum-script-license.cpp"
#include "quantum-script-version.cpp"
#include "quantum-script-arrayiteratorkey.cpp"
#include "quantum-script-arrayiteratorvalue.cpp"
#include "quantum-script-asm.cpp"
#include "quantum-script-associativearrayiteratorkey.cpp"
#include "quantum-script-associativearrayiteratorvalue.cpp"
#include "quantum-script-context.cpp"
#include "quantum-script-executive.cpp"
#include "quantum-script-executivex.cpp"
#include "quantum-script-input.cpp"
#include "quantum-script-instruction.cpp"
#include "quantum-script-instructioncontext.cpp"
#include "quantum-script-iterator.cpp"
#include "quantum-script-libstd.cpp"
#include "quantum-script-libstdarray.cpp"
#include "quantum-script-libstdconvert.cpp"
#include "quantum-script-libstderror.cpp"
#include "quantum-script-libstdfunction.cpp"
#include "quantum-script-libstdobject.cpp"
#include "quantum-script-libstdscript.cpp"
#include "quantum-script-libstdstring.cpp"
#include "quantum-script-libstdresource.cpp"
#include "quantum-script-objectiteratorkey.cpp"
#include "quantum-script-objectiteratorvalue.cpp"
#include "quantum-script-parser-break.cpp"
#include "quantum-script-parser-continue.cpp"
#include "quantum-script-parser-do.cpp"
#include "quantum-script-parser-expression.cpp"
#include "quantum-script-parser-for.cpp"
#include "quantum-script-parser-function.cpp"
#include "quantum-script-parser-if.cpp"
#include "quantum-script-parser-return.cpp"
#include "quantum-script-parser-switch.cpp"
#include "quantum-script-parser-throw.cpp"
#include "quantum-script-parser-try.cpp"
#include "quantum-script-parser-var.cpp"
#include "quantum-script-parser-while.cpp"
#include "quantum-script-parser-yield.cpp"
#include "quantum-script-parser.cpp"
#include "quantum-script-prototype.cpp"
#include "quantum-script-symbollist.cpp"
#include "quantum-script-token.cpp"
#include "quantum-script-variable.cpp"
#include "quantum-script-variableargumentlevel.cpp"
#include "quantum-script-variablearray.cpp"
#include "quantum-script-variableassociativearray.cpp"
#include "quantum-script-variableboolean.cpp"
#include "quantum-script-variablefunction.cpp"
#include "quantum-script-variablefunctionwithyield.cpp"
#include "quantum-script-variablenativevmfunction.cpp"
#include "quantum-script-variablenull.cpp"
#include "quantum-script-variablenumber.cpp"
#include "quantum-script-variableobject.cpp"
#include "quantum-script-variableoperator21.cpp"
#include "quantum-script-variableoperator22.cpp"
#include "quantum-script-variableoperator23.cpp"
#include "quantum-script-variableoperator31.cpp"
#include "quantum-script-variablereferencesymbol.cpp"
#include "quantum-script-variablereferenceindex.cpp"
#include "quantum-script-variablereferencevariable.cpp"
#include "quantum-script-variablestacktrace.cpp"
#include "quantum-script-variablestring.cpp"
#include "quantum-script-variablesymbol.cpp"
#include "quantum-script-variablevmfunction.cpp"
#include "quantum-script-variablevmprogramcounter.cpp"
#include "quantum-script-variableresource.cpp"
